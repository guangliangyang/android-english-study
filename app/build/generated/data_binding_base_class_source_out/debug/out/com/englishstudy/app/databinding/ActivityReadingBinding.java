// Generated by view binder compiler. Do not edit!
package com.englishstudy.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.englishstudy.app.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReadingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ScrollView contentScrollView;

  @NonNull
  public final TextView fontSizeButton;

  @NonNull
  public final ImageView nextPhaseButton;

  @NonNull
  public final ImageView playPauseButton;

  @NonNull
  public final MaterialButton pointReadButton;

  @NonNull
  public final ImageView previousPhaseButton;

  @NonNull
  public final TextView progressText;

  @NonNull
  public final MaterialCardView readingControlsCard;

  @NonNull
  public final MaterialButton repeatButton;

  @NonNull
  public final RecyclerView sentencesRecyclerView;

  @NonNull
  public final MaterialButton sequentialButton;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityReadingBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull ScrollView contentScrollView,
      @NonNull TextView fontSizeButton, @NonNull ImageView nextPhaseButton,
      @NonNull ImageView playPauseButton, @NonNull MaterialButton pointReadButton,
      @NonNull ImageView previousPhaseButton, @NonNull TextView progressText,
      @NonNull MaterialCardView readingControlsCard, @NonNull MaterialButton repeatButton,
      @NonNull RecyclerView sentencesRecyclerView, @NonNull MaterialButton sequentialButton,
      @NonNull TextView titleText, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.contentScrollView = contentScrollView;
    this.fontSizeButton = fontSizeButton;
    this.nextPhaseButton = nextPhaseButton;
    this.playPauseButton = playPauseButton;
    this.pointReadButton = pointReadButton;
    this.previousPhaseButton = previousPhaseButton;
    this.progressText = progressText;
    this.readingControlsCard = readingControlsCard;
    this.repeatButton = repeatButton;
    this.sentencesRecyclerView = sentencesRecyclerView;
    this.sequentialButton = sequentialButton;
    this.titleText = titleText;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReadingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReadingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_reading, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReadingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = rootView.findViewById(id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.contentScrollView;
      ScrollView contentScrollView = rootView.findViewById(id);
      if (contentScrollView == null) {
        break missingId;
      }

      id = R.id.fontSizeButton;
      TextView fontSizeButton = rootView.findViewById(id);
      if (fontSizeButton == null) {
        break missingId;
      }

      id = R.id.nextPhaseButton;
      ImageView nextPhaseButton = rootView.findViewById(id);
      if (nextPhaseButton == null) {
        break missingId;
      }

      id = R.id.playPauseButton;
      ImageView playPauseButton = rootView.findViewById(id);
      if (playPauseButton == null) {
        break missingId;
      }

      id = R.id.pointReadButton;
      MaterialButton pointReadButton = rootView.findViewById(id);
      if (pointReadButton == null) {
        break missingId;
      }

      id = R.id.previousPhaseButton;
      ImageView previousPhaseButton = rootView.findViewById(id);
      if (previousPhaseButton == null) {
        break missingId;
      }

      id = R.id.progressText;
      TextView progressText = rootView.findViewById(id);
      if (progressText == null) {
        break missingId;
      }

      id = R.id.readingControlsCard;
      MaterialCardView readingControlsCard = rootView.findViewById(id);
      if (readingControlsCard == null) {
        break missingId;
      }

      id = R.id.repeatButton;
      MaterialButton repeatButton = rootView.findViewById(id);
      if (repeatButton == null) {
        break missingId;
      }

      id = R.id.sentencesRecyclerView;
      RecyclerView sentencesRecyclerView = rootView.findViewById(id);
      if (sentencesRecyclerView == null) {
        break missingId;
      }

      id = R.id.sequentialButton;
      MaterialButton sequentialButton = rootView.findViewById(id);
      if (sequentialButton == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = rootView.findViewById(id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityReadingBinding((ConstraintLayout) rootView, appBarLayout,
          contentScrollView, fontSizeButton, nextPhaseButton, playPauseButton, pointReadButton,
          previousPhaseButton, progressText, readingControlsCard, repeatButton,
          sentencesRecyclerView, sequentialButton, titleText, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
